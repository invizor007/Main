//ПЕРЕМЕННЫЕ//Сама картаvar Map;//0-пусто//1-3 ресурсы//100-107- здания//200-202-юнитыTmp="";//Строковая переменная для записи на формуMapSize=16;//Размер картыcol=0,row=0;//Начальные координатыLeft=6,Top=6,Bottom=9,Right=9;//Координаты границы//РесурсыresIMC=1;//Количество ресурсов каждого типа на стартовой картеresC=3;//Количество ресурсовres=Array(200,200,100);//Количество каждого ресурсыres_str=Array("Дерево","Еда","Золото");//Название ресурсовpopul=0,populM=0;//Население и предел населения, (ограничения домами)build_is_res=1;//Наличие ресурсов на зданиеunit_is_res=1;//Наличие ресурсов на найм существаrespp=Array(0,0,0);//Прирост ресурсовnewres=0;//Новая земля после расширения территорий//ЗданияbuildC=8;//Количество типов зданийbuild=Array();build_files=Array("build00.bmp","build01.bmp","build02.bmp","build03.bmp","build04.bmp","build05.bmp","build06.bmp","build07.bmp");//картинки зданийbuild_str=Array("Казармы","Стрельбище","Конюшни","Хижина","Башня","Лесопилка","Ферма","Золотая шахта");//названия зданийbuild_num=-1;//текущая постройка(-1 значит не строится, -2 снос зданийbuild_tc=Array(0,0,0,0,0,0,0,0);//количество зданий определенного типаbuild_cost=Array(buildC);//стоимость зданий//ЮнитыunitC=3;//количество типов юнитовunit_str=Array("Мечник","Лучник","Всадник");//названия юнитовunit_files=Array("unit00.bmp","unit01.bmp","unit02.bmp");//картинки юнитовunit_tc=Array(0,0,0);//количество юнитов определенного типаhpm=Array(30,20,60);//Максимальное здоровье юнитаdmg=Array(unitC);//Урон юнита 12,18,6free_x=-1;free_y=-1;//Свободная позиция для юнита при наймеhodit=0;hoditX=-1;hoditY=-1;//Наличие и координаты перемещения юнитов по картеunit_cost=Array(unitC);//стоимость юнитов//Битваbat_files=Array("in.bmp","unit00.bmp","unit01.bmp","unit02.bmp","trup.bmp");//картинки юнитов в битвеtower_files=Array("in.bmp","build04.bmp");//картинки башни и небашни в битвеGranicaX=-1,GranicaY=-1;gr_sgn=0;//Парамерты определяемые при сражении с границейprio=Array(1,1,1);//Приоритеты атаки для хода ииpurpose=-1;//цель атаки для ииBattleLineC=0;//длина поля битвыBatX=-1,BatY=-1;//координаты клика игрока по картеEnemy=Array();//юниты врага на границеYou=Array();//ваши юниты на границеYouTower=Array();//ваши башни на границеEnemy_chp=Array();//текущее здоровье вражеских юнитов в битвеYou_chp=Array();//текущее здоровье ваших юнитов в битвеbatwin=-2;//индетификатор победы в битвеactor=0;//номер юнита компа//ФУНКЦИИfunction A(i){alert("A("+i+")");}//Имя файла для каждой ячейкиfunction filename(i){if (i==0) {return 'in.bmp'};if ((i>=1)&&(i<=3)) {return 'res0'+(i-1)+'.bmp'};if ((i>=100)&&(i<=107)) {return 'build0'+(i-100)+'.bmp'};if ((i>=200)&&(i<=202)) {return 'unit0'+(i-200)+'.bmp'};}//устанавливает начальные ресурсыfunction set_res_place(){var rn,num,x,y;//Map=[];for(rn=0;rn<resC;rn++) 	{	for (num=0;num<resIMC;num++)		{		do			{			x=Math.floor(Math.random()*(9-6+1))+6;//Right Left Left			y=Math.floor(Math.random()*(9-6+1))+6;//Bottom Top Top			}		while (Map[x][y] !=0);		Map[x][y]=rn+1;		}	}}//устанавливает начальных юнитовfunction set_unit_place(){var x,y;for (y=0;y<MapSize;y++)	{	for(x=0;x<MapSize;x++)		{			if  (!((y>=Top)&&(y<=Bottom)&&(x>=Left)&&(x<=Right)))				Map[x][y]=Math.floor(Math.random()*3)+200;		}	}}//устанавливает стоимость зданийfunction set_build_cost(){var i=0;//build_cost=new Array(buildC);for(i=0; i<buildC; i++) 	{	build_cost[i]=new Array(resC)	}build_cost[0][0]=30;build_cost[0][1]=30;build_cost[0][2]=10;//Казармыbuild_cost[1][0]=40;build_cost[1][1]=20;build_cost[1][2]=10;//Стрельбищеbuild_cost[2][0]=20;build_cost[2][1]=40;build_cost[2][2]=10;//Конюшниbuild_cost[3][0]=40;build_cost[3][1]=10;build_cost[3][2]=40;//Домbuild_cost[4][0]=10;build_cost[4][1]=10;build_cost[4][2]=60;//Башняbuild_cost[5][0]=10;build_cost[5][1]=20;build_cost[5][2]=20;//Лесопилкаbuild_cost[6][0]=20;build_cost[6][1]=10;build_cost[6][2]=20;//Фермаbuild_cost[7][0]=20;build_cost[7][1]=20;build_cost[7][2]=10;//Золотая шахта}//устанавливает урон существfunction set_unit_dmg(){var i=0;//dmg=new Array(unitC);for(i=0; i<unitC; i++) 	{	dmg[i]=new Array(unitC)	}dmg[0][0]=12;dmg[0][1]=8;dmg[0][2]=18;//Мечникdmg[1][0]=27;dmg[1][1]=18;dmg[1][2]=12;//Лучникdmg[2][0]=4;dmg[2][1]=9;dmg[2][2]=6;//Кавалерист}//устанавливает стоимость юнитовfunction set_unit_cost(){var i=0;//unit_cost=new Array(UnitC);for(i=0; i<buildC; i++) 	{	unit_cost[i]=new Array(resC)	}unit_cost[0][0]=10;unit_cost[0][1]=30;unit_cost[0][2]=10;//Мечникunit_cost[1][0]=30;unit_cost[1][1]=10;unit_cost[1][2]=10;//Лучникunit_cost[2][0]=10;unit_cost[2][1]=10;unit_cost[2][2]=30;//Всадник}//ОЧИСТКА ФОРМfunction clear_form0(){var Temp = document.getElementById("id0").innerHTML;  Temp = "";  document.getElementById("id0").innerHTML = Temp;}function clear_form1(){var Temp = document.getElementById("id1").innerHTML;  Temp = "";  document.getElementById("id1").innerHTML = Temp;}function clear_form2(){var Temp = document.getElementById("id2").innerHTML;  Temp = "";  document.getElementById("id2").innerHTML = Temp; }function clear_form3(){var Temp = document.getElementById("id3").innerHTML;  Temp = "";  document.getElementById("id3").innerHTML = Temp; }function clear_forms(){clear_form0();clear_form1();  clear_form2(); clear_form3(); }//КНОПКИ ЮНИТОВ И ЗДАНИЙfunction otmena(){ build_num=-1;document.getElementById("infobtn").value="Выделение";}function snesti(){ build_num=-2;document.getElementById("infobtn").value="Снести";}function hoditt(){ build_num=-1;hodit=1;document.getElementById("infobtn").value="Ход юнитом";}function naym(){ hodit=0;build_num=-1;document.getElementById("infobtn").value="Найм";}//ПЕРЕРИСОВКА ФОРМfunction draw0(){//j is x ; i is yTmp = document.getElementById("id0").innerHTML;for (i = 0; i <MapSize; i++) {	for (j=0;j<MapSize;j++)	{	if ( (i>=Top)&&(i<=Bottom)&&(j>=Left)&&(j<=Right) )		{		Tmp+='<img name=i'+i+'j'+j+' src=BitMaps&#092'+filename(Map[j][i])+' width=40 height=40 onClick=select('+i+','+j+') />';		}	else if(( ((i==Top-1)||(i==Bottom+1) )&&(j>=Left)&&(j<=Right)  )||( (i>=Top)&&(i<=Bottom)&&((j==Left-1)||(j==Right+1))))		{		if (Map[j][i]==0)			Tmp+='<img name=i'+i+'j'+j+' src=BitMaps&#092out.bmp width=40 height=40 onClick=select2('+i+','+j+') />';		if ((Map[j][i]>=200)&&(Map[i][j]<=202))			Tmp+='<img name=i'+i+'j'+j+' src=BitMaps&#092'+filename(Map[j][i])+' width=40 height=40 onClick=select2('+i+','+j+') />';		}	else		{		Tmp+='<img name=zd'+i+' src=BitMaps&#092unvis.bmp width=40 height=40 />';		}	}Tmp+='<br>';}document.getElementById("id0").innerHTML = Tmp;}function draw1(){clear_form1();Tmp = document.getElementById("id1").innerHTML;for (i = 0; i <resC; i++) 	{		Tmp+=res_str[i]+"="+res[i]+'<br>';	}Tmp+='Нас.'+popul+'<br>';Tmp+='Макс.'+populM+'<br>';document.getElementById("id1").innerHTML = Tmp;}function draw2(){Tmp = document.getElementById("id2").innerHTML;for (i = 0; i <buildC; i++) {		Tmp+='<img src=BitMaps&#092'+build_files[i]+' width=40 height=40 onClick=select3('+i+') />'+build_tc[i];}Tmp+='<input type=button width=60 value="Отмена" onClick=otmena()>';Tmp+='<input type=button width=60 value="Снести" onClick=snesti()>';//Tmp+='<input type=button value="Тест" onClick="testing();"><br>';//кнопка для тестированияTmp+='<h3>Юниты</h3>';for (i = 0; i <3; i++) {		Tmp+='<img src=BitMaps&#092'+unit_files[i]+' width=40 height=40 onClick=select4('+i+') />'+unit_tc[i]+'';}Tmp+='<input type=button width=60 value="Ходить" onClick=hoditt()>';Tmp+='<input type=button width=60 value="Найм" onClick=naym()>';document.getElementById("id2").innerHTML = Tmp;}function draw3(){Tmp = document.getElementById("id3").innerHTML;//Tmp+='<h3>Башня<h3>';for (i = 0; i <BattleLineC; i++) {		Tmp+='<img src=BitMaps&#092'+tower_files[YouTower[i]%10]+' width=40 height=40 onClick=select51('+i+') />';	if (You_chp[i]<10)		Tmp+='0';	Tmp+=(You_chp[i]);	Tmp+='<img src=BitMaps&#092'+bat_files[You[i]%10]+' width=40 height=40 onClick=select52('+i+') />';		Tmp+='<img src=BitMaps&#092'+bat_files[Enemy[i]%10]+' width=40 height=40 onClick=select53('+i+') />';	if (Enemy_chp[i]<10)		Tmp+='0';	Tmp+=(Enemy_chp[i]);}if (BattleLineC>0)	{	Tmp+='<input type=button value="Шаг" onClick="step_battle()">';	Tmp+='<input type=button value="OK" onClick="end_battle();after_battle()">';	Tmp+='<input type=button value="Отмена" onClick="cancel_battle()"><br>';	//Tmp+='<input type=button value="Победить" onClick="good_battle();"><br>';//раскомментируйте если хотите почитерить	}document.getElementById("id3").innerHTML = Tmp;}//ОСНОВНАЯ ПРОЦЕДУРА ЗАГРУЗКИfunction load(){var i,j;if (!forminit.diffic[2].checked)	{	Left=5;Top=5;	Right=10;Bottom=10;	}clear_forms();Map=new Array(MapSize);for(i=0; i<MapSize; i++) {	Map[i]=new Array(MapSize);	for (j=0;j<MapSize;j++)		Map[i][j]=0;		}set_unit_dmg();set_build_cost();set_unit_cost();set_res_place();set_unit_place();draw0();draw1();draw2();draw3();window.setTimeout("timer();", 5000);}//Определение места существа при наймеfunction get_free_place(){//var b=false;for (free_y=Top;free_y<=Bottom;free_y++)	{	for(free_x=Left;free_x<=Right;free_x++)		{		if (Map[free_x][free_y]==0) return true;		}	}return false;}//НАЛИЧИЕ РЕСУРСОВfunction make_build_is_res(){build_is_res=1;var i=0;for (i=0;i<resC;i++)	if (build_cost[build_num][i]>res[i])		build_is_res=0;}function make_unit_is_res(i){unit_is_res=1;var k=0;for (k=0;k<resC;k++)	{	if (unit_cost[i][k]>res[k])		unit_is_res=0;	}}//РАСХОД РЕСУРСОВfunction build_sub_res(){for (var i=0;i<resC;i++) 	res[i]-=build_cost[build_num][i];}function unit_sub_res(i){for (var k=0;k<resC;k++) 	res[k]-=unit_cost[i][k];}//КЛИКИ ПО РАЗЛИЧНЫМ КАРТИНКАМ//клик по карте мираfunction select(i,j){var num=Map[j][i];build_is_res=1;unit_is_res=1;//строительство здания на обычной землеif ((num==0)&&(build_num>=0)&&(build_num<=4))	{	make_build_is_res();//сделать проверку на наличие ресурсов	if (build_is_res==1)		{		Map[j][i]=100+build_num;		document.images[i*MapSize+j].src='Bitmaps\\build0'+build_num+'.bmp';		build_sub_res();		//Дополнительная реакция на постройку здания		build_tc[build_num]++;		if (build_num==3)			{			populM+=3;			}		clear_form1();		draw1();		clear_form2();		draw2();		}	else		alert("Недостаточно ресурсов");	}//Построено здание ресурсов на соответствующей земле месторожденийif ((num>=1)&&(num<=3)&&(build_num==4+num))	{	make_build_is_res();	if (build_is_res==1)		{		Map[j][i]=100+build_num;		document.images[i*MapSize+j].src='Bitmaps\\build0'+build_num+'.bmp';		build_sub_res();		respp[num-1]++;		build_tc[build_num]++;		clear_form1();		draw1();		clear_form2();		draw2();				}	else		alert("Недостаточно ресурсов");	}//Нанимается юнит в зданииif ((num>=100)&&(num<=102)&&get_free_place()&&(popul<populM)&&(unit_tc[num-100]<2*build_tc[num-100])&&(hodit==0))	{	make_unit_is_res(num-100);	if (unit_is_res==1)		{		Map[free_x][free_y]=num-100;		document.images[MapSize*free_y+free_x].src='Bitmaps\\unit0'+Map[free_x][free_y]+'.bmp';		Map[free_x][free_y]=num+100;		popul++;		unit_tc[num-100]++;		unit_sub_res(num-100);		clear_form1();		draw1();		clear_form2();		draw2();		}	else 		alert("Недостаточно ресурсов");	}//юнит выделяется для перемещенияif ((num>=200)&&(num<=202)&&(hodit==1))	{	hodit=2;	hoditX=j;	hoditY=i;	alert("Перемещение юнита из ("+j+","+i+")");	}//юнит перемещается в другую точку картыif ((num==0)&&(hodit==2))	{	Map[j][i]=Map[hoditX][hoditY];	document.images[MapSize*i+j].src=document.images[MapSize*hoditY+hoditX].src;	Map[hoditX][hoditY]=0;	document.images[MapSize*i+j].src='Bitmaps\\in.bmp';	alert("Перемещение юнита в ("+j+","+i+")");	hodit=1;	clear_form0();	draw0();	}//здание сноситсяif ((build_num==-2)&&(num>=100)&(num<=107))	{	Map[j][i]=0;	document.images[MapSize*j+i].src='Bitmaps\\in.bmp';	//дополнительная реакция	build_tc[num-100]--;	if ((num>=105)&&(num<=107))//это если здание ресурсов уничтожается		respp[num-105]--;	if (num==103)		populM-=3;	}	clear_form0();	draw0();		clear_form1();	draw1();	clear_form2();	draw2();	}//Выделение границыfunction select2(i,j){var k;if (confirm("Вы действительно хотите сразится с этой границей?"))	{//Вертикальная граница	if ((j<Left)||(j>Right))		{		GranicaX=j;		GranicaY=-1;		BattleLineC=Bottom-Top+1;		if (GranicaX<Left) gr_sgn=1;		if (GranicaX>Right) gr_sgn=-1;				for (k=0;k<BattleLineC;k++)			{			You[k]=0;			You_chp[k]=0;			if ((Map[GranicaX+gr_sgn][Top+k]>=200)&&(Map[GranicaX+gr_sgn][Top+k]<=202))				{				You[k]=Map[GranicaX+gr_sgn][Top+k]-200+1;				You_chp[k]=hpm[Map[GranicaX+gr_sgn][Top+k]-200];				}			}		for (k=0;k<BattleLineC;k++)			{			Enemy[k]=0;			Enemy_chp[k]=0;			if ((Map[GranicaX][Top+k]>=200)&&(Map[GranicaX][Top+k]<=202))				{				Enemy[k]=Map[GranicaX][Top+k]-200+1;				Enemy_chp[k]=hpm[Map[GranicaX][Top+k]-200];				}			}		for (k=0;k<BattleLineC;k++)			{			if (Map[GranicaX+2*gr_sgn][Top+k]==104) YouTower[k]=1;			else YouTower[k]=0;			}		}	if ((i<Top)||(i>Bottom))		{//Горизонтальная граница		GranicaX=-1;		GranicaY=i;		BattleLineC=Right-Left+1;		if (GranicaY<Top) gr_sgn=1;		if (GranicaY>Bottom) gr_sgn=-1;				for (k=0;k<BattleLineC;k++)			{			You[k]=0;			You_chp[k]=0;			if ((Map[Left+k][GranicaY+gr_sgn]>=200)&&(Map[Left+k][GranicaY+gr_sgn]<=202))				{				You[k]=Map[Left+k][GranicaY+gr_sgn]-200+1;				You_chp[k]=hpm[Map[Left+k][GranicaY+gr_sgn]-200];				}			}		for (k=0;k<BattleLineC;k++)			{			Enemy[k]=0;			Enemy_chp[k]=0;			if ((Map[Left+k][GranicaY]>=200)&&(Map[Left+k][GranicaY]<=202))				{				Enemy[k]=Map[Left+k][GranicaY]-200+1;				Enemy_chp[k]=hpm[Map[Left+k][GranicaY]-200];				}			}		for (k=0;k<BattleLineC;k++)			{			if (Map[Left+k][GranicaY+2*gr_sgn]==104) YouTower[k]=1;			else YouTower[k]=0;			}		}	clear_form3();	draw3();	alert("сражение началось");	}}//Выделение списка зданийfunction select3(i){build_num=i;alert("Построить "+build_str[build_num]);document.getElementById("infobtn").value="Строить";}//Выделение списка юнитовfunction select4(i){alert(unit_str[i]);}//Выделение башниfunction select51(i){if (YouTower[i]==1)	{	alert("Ваша башня");	BatX=0;	BatY=i;	}else if (YouTower[i]==11)	{	alert("Вы уже походили башней");	}else	{	alert("Здесь могла быть ваша башня");	}}//Выделение ваших войскfunction select52(i){if ((You[i]>=1)&&(You[i]<=3))	{	alert("Выбран ваш "+unit_str[You[i]-1]);	BatX=1;	BatY=i;	}if ((You[i]>=11)&&(You[i]<=13))	{	alert("Вы уже походили этим юнитом ");	}if ((You[i]==14)||(You[i]==4))	{	alert("Этот юнит пал в бою");	}}//Выделение войск врагаfunction select53(i){if ((BatX==1)&&(Enemy[i]>0))	{	if ((You[BatY]>0)&&(You[BatY]<=3)&&(BatY-i>=-1)&&(BatY-i<=1))		{		you_deal_damage(i);		BatX=-1;		BatY=-1;		}	}if ((BatX==0)&&(Enemy[i]>0))	{	if ((YouTower[BatY]>0)&&(YouTower[BatY]<=3)&&(BatY-i>=-1)&&(BatY-i<=1))		{		youtower_deal_damage(i);		BatX=-1;		BatY=-1;		}	}alert("Враг");}//для тестированияfunction testing(){	alert(" "+MapSize+" ");//тестирование- выводится любая переменная на ваш выбор}//Результат битвы batwin://-1 битва продолжается; 0-выиграл ии; 1-выиграли вы(если ничья-победа тоже вам);function make_batwin(){batwin=0;for (var i=0;i<BattleLineC;i++)	{ //alert("You["+i+"]="+You[i]);	if ((You[i]!=0)&&(You[i]!=4)) 		{batwin=-1;}	}//alert("A. batwin="+batwin);if (batwin==-1)	{	batwin=1;	for (var i=0;i<BattleLineC;i++)		{ //alert("Enemy["+i+"]="+Enemy[i]);		if ((Enemy[i]!=0)&&(Enemy[i]!=4)) 			{batwin=-1;}		} //alert("B. batwin="+batwin);	}}//Проверка на трупы переж ходомfunction check_corpse(){var i=0;for (i=0;i<BattleLineC;i++)	{	if ((Enemy_chp[i]<=0)&&(Enemy[i]>=1)&&(Enemy[i]<=3))		{Enemy[i]=4;}//труп	if ((You_chp[i]<=0)&&(You[i]>=1)&&(You[i]<=3))		{You[i]=4;}//труп	}}function avail_hod(){var i=0;for (i=0;i<BattleLineC;i++)	{	if (You[i]>=10)		You[i]-=10;	if (YouTower[i]>=10)		YouTower[i]-=10;	}}function after_battle(){BattleLineC=0;clear_form0();draw0();clear_form3();draw3();}//КНОПКИ В БИТВЕ//Действия в зависимости от batwinfunction step_battle(){avail_hod();//Дать возможность юнитам ходитьcheck_corpse();//Проверить наличие труповmake_batwin();//присвоить batwin- наличие победы и поражения//alert("B2 batwin"+batwin);comp_hod();//ход компьютераclear_form3(); //alert("C batwin"+batwin);draw3(); //alert("D batwin"+batwin)if (batwin==0)	{	alert("Вы не смогли победить стражников границы");	if (confirm("Принять такие результаты"))		{		end_battle();		after_battle();		}	else		{ cancel_battle(); }	}if (batwin==1)	{	alert("Стражи побеждены, ваши территории расширяются");	end_battle();	good_battle();	}if (batwin==-1)	{	alert("Битва продолжается");	}if (batwin==-2)	{	alert("У вас все мирно");	}clear_form0();draw0();//При условии batwin==-1 вы продолжаете атаковать}//завершить битву по кнопке или просто когда все понятноfunction end_battle(){var k=0;if (confirm("Вы действительно ходить завершить битву с применением результата"))	{	alert("Вы вышли из битвы");	if (GranicaX==-1)//граница горизонтальная		{		for (k=0;k<BattleLineC;k++)			{			if (You[k]==4)				{				unit_tc[Map[Left+k][GranicaY+gr_sgn]-200]--;				popup--;				Map[Left+k][GranicaY+gr_sgn]=0;									}			//form0.images[MapSize*(GranicaY+sgn)+(Left+k)]=Map[Left+k][GranicaY+sgn];			if (Enemy[k]==4)					Map[Left+k][GranicaY]=0;			//form0.images[MapSize*(GranicaY)+(Left+k)]=Map[Left+k][GranicaY];			}		}	if (GranicaY==-1)		{		for (k=0;k<BattleLineC;k++)			{			if (You[k]==4)				{				unit_tc[Map[GranicaX+gr_sgn][Top+k]-200]--;				popup--;				Map[GranicaX+gr_sgn][Top+k]=0;				}			//form0.images[MapSize*(Top+k)+(GranicaX+sgn)]=Map[GranicaY+sgn][Top+k];			if (Enemy[k]==4)					Map[GranicaX][Top+k]=0;			//form0.images[MapSize*(Top+k)+(GranicaX)]=Map[GranicaX][Top+k];			}		}	if (batwin!=1)		{		BattleLineC=0;		clear_form3();		draw3();		clear_form0();		draw0();		}	clear_form1();	draw1();	clear_form2();	draw2();	}}//отменить результаты битвыfunction cancel_battle(){if (confirm("Вы действительно ходить завершить битву без применения результата"))	{	alert("Битва отменена");	BattleLineC=0;	clear_form3();	draw3();	}}//дополнения(расширение границ) при хорошем исходе бояfunction good_battle(){var i;for (i=0;i<BattleLineC;i++)	{	if (GranicaX!=-1)		{		granica_res();		Map[GranicaX][Top+i]=new_res;		}	if (GranicaY!=-1)		{		granica_res();		Map[Left+i][GranicaY]=new_res;		}	}if ((GranicaY==-1)&&(GranicaX<Left)) Left--else if ((GranicaX==-1)&&(GranicaY<Top)) Top--else if ((GranicaY==-1)&&(GranicaX>Right)) Right++else if ((GranicaX==-1)&&(GranicaY>Bottom)) Bottom++;clear_form0();draw0();BattleLineC=0;clear_form3();draw3();check_win();}//ДЕЙСТВИЯ ИИ ПО ВЫБОРУ ПРОТИВНИКАfunction good_purpose(){if ((actor+purpose<0)||(actor+purpose>=BattleLineC)) return false;if ((You[actor+purpose]==0)||(You[actor+purpose]==4)) return false;return true;}function is_purpose(){for (purpose=-1;purpose<=1;purpose++)	{	if (good_purpose()) 		{ return true; }	}return false;}//ХОД КОМПЬЮТЕРАfunction comp_hod(){ //alert("A1");for (actor=0;actor<BattleLineC;actor++)	{ //alert("A2 "+ actor);	if ((Enemy[actor]>=1)&&((Enemy[actor]<=3))&&(is_purpose()))		{		while (!good_purpose())			{purpose=Math.floor(Math.random()*3)-1;}		You_chp[actor+purpose]-=dmg[Enemy[actor]-1][You[actor+purpose]-1];				if (You_chp[actor+purpose]<=0)			{			You_chp[actor+purpose]=0			You[actor+purpose]=4;			}		}	}}//Бонусы- атакующий-i защищающийся jfunction bd(i,j){if (i-j==0)	return 1;if ((i-j==1)||(i-j==-2))	return 2;if ((i-j==2)||(i-j==1))	return 0.5;}//Ваш юнит наносит уронfunction you_deal_damage(i){Enemy_chp[i]-=dmg[You[BatY]-1][Enemy[i]-1];if (Enemy_chp[i]<=0)	{	Enemy_chp[i]=0;	Enemy[i]=4;	}You[BatY]+=10;clear_form3();draw3();}//Ваша башня наносит уронfunction youtower_deal_damage(i){Enemy_chp[i]-=10;if (Enemy_chp[i]<=0)	{	Enemy_chp[i]=0;	Enemy[i]=4;	}YouTower[BatY]+=10;clear_form3();draw3();}//Новые ресурсы при расширении границfunction granica_res(){new_res=0;for (i=0;i<resC;i++)	if ((Math.random()<0.05)&&(new_res==0))		{		new_res=i;		}}//Вывод ресурсов по таймеруfunction timer(){var d=0;if (forminit.diffic[0].checked==1)	d=1;for (i=0;i<resC;i++)	res[i]+=5*(build_tc[i+5]+d);//Победить - ниже еще немного читов//res[0]=1000;res[1]=1000;res[2]=1000;clear_form1();draw1();window.setTimeout("timer();", 5000);}//Проверка на победу в игреfunction check_win(){if ((Left==0)&&(Top==0)&&(Bottom==MapSize-1)&&(Right==MapSize-1))	{	alert('УРА ВЫ ВЫИГРАЛИ!!!!');	}}